import React, { useState, useEffect } from "react";
import Loader from "../components/Loader";
import Card from "../components/Card";
import FormField from "../components/FormField";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");

  const fetchPosts = async () => {
    setLoading(true);

    try {
      const response = await fetch(
        "https://image-generator-backend-kkh8.onrender.com/api/v1/post",
        {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        }
      );
      if (response.ok) {
        const result = await response.json();
        setAllPosts(result.data.reverse());
      } else {
        console.error("Failed to fetch posts:", response.statusText);
      }
    } catch (error) {
      console.error("Error fetching posts:", error);
      alert(error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchPosts();
  }, []);

  return (
    <section className="max-w-7xl flex flex-col mx-auto">
      <div className="flex justify-center flex-col">
        <h1 className="font-bold text-black text-[32px]">
          AI will create amazing art from your words!
        </h1>
        <p className="mt-2 text-gray-600 text-[16px] max-w-[500px]">
          Browse through a collection of imaginative and stunning images
          generated by Lexica Art
        </p>
      </div>

      <div className="mt-16">
        <FormField
          labelName="Search Posts"
          type="text"
          name="text"
          placeholder="Search something..."
          value={searchText}
          handleChange={(e) => setSearchText(e.target.value)}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
            {searchText ? (
              <RenderCards
                data={allPosts.filter((post) =>
                  post.prompt.toLowerCase().includes(searchText.toLowerCase())
                )}
                title="No search results found"
              />
            ) : (
              <RenderCards data={allPosts} title="No Posts Yet" />
            )}
          </div>
        )}
      </div>
    </section>
  );
};

export default Home;
